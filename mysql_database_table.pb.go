// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.31.1
// source: mysql_database_table.proto

package dbprotooption

import (
	_ "github.com/luyuancpp/dbprotooption"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Player struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      uint64                 `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Player) Reset() {
	*x = Player{}
	mi := &file_mysql_database_table_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_mysql_database_table_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_mysql_database_table_proto_rawDescGZIP(), []int{0}
}

func (x *Player) GetPlayerId() uint64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *Player) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// 原始表
type GolangTest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Ip            string                 `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Port          uint32                 `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	GroupId       uint32                 `protobuf:"varint,4,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Player        *Player                `protobuf:"bytes,5,opt,name=player,proto3" json:"player,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GolangTest) Reset() {
	*x = GolangTest{}
	mi := &file_mysql_database_table_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GolangTest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GolangTest) ProtoMessage() {}

func (x *GolangTest) ProtoReflect() protoreflect.Message {
	mi := &file_mysql_database_table_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GolangTest.ProtoReflect.Descriptor instead.
func (*GolangTest) Descriptor() ([]byte, []int) {
	return file_mysql_database_table_proto_rawDescGZIP(), []int{1}
}

func (x *GolangTest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GolangTest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *GolangTest) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *GolangTest) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *GolangTest) GetPlayer() *Player {
	if x != nil {
		return x.Player
	}
	return nil
}

// 新增表1：golang_test1（结构类似，增加一个额外字段）
type GolangTest1 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Ip            string                 `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Port          uint32                 `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	GroupId       uint32                 `protobuf:"varint,4,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Player        *Player                `protobuf:"bytes,5,opt,name=player,proto3" json:"player,omitempty"`
	ExtraInfo     string                 `protobuf:"bytes,6,opt,name=extra_info,json=extraInfo,proto3" json:"extra_info,omitempty"` // 额外字段，区分于原始表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GolangTest1) Reset() {
	*x = GolangTest1{}
	mi := &file_mysql_database_table_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GolangTest1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GolangTest1) ProtoMessage() {}

func (x *GolangTest1) ProtoReflect() protoreflect.Message {
	mi := &file_mysql_database_table_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GolangTest1.ProtoReflect.Descriptor instead.
func (*GolangTest1) Descriptor() ([]byte, []int) {
	return file_mysql_database_table_proto_rawDescGZIP(), []int{2}
}

func (x *GolangTest1) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GolangTest1) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *GolangTest1) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *GolangTest1) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *GolangTest1) GetPlayer() *Player {
	if x != nil {
		return x.Player
	}
	return nil
}

func (x *GolangTest1) GetExtraInfo() string {
	if x != nil {
		return x.ExtraInfo
	}
	return ""
}

// 新增表2：golang_test2（结构类似，修改字段类型）
type GolangTest2 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Ip            string                 `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Port          uint64                 `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"` // 端口改为uint64，区分于原始表
	GroupId       uint32                 `protobuf:"varint,4,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Player        *Player                `protobuf:"bytes,5,opt,name=player,proto3" json:"player,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GolangTest2) Reset() {
	*x = GolangTest2{}
	mi := &file_mysql_database_table_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GolangTest2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GolangTest2) ProtoMessage() {}

func (x *GolangTest2) ProtoReflect() protoreflect.Message {
	mi := &file_mysql_database_table_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GolangTest2.ProtoReflect.Descriptor instead.
func (*GolangTest2) Descriptor() ([]byte, []int) {
	return file_mysql_database_table_proto_rawDescGZIP(), []int{3}
}

func (x *GolangTest2) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GolangTest2) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *GolangTest2) GetPort() uint64 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *GolangTest2) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *GolangTest2) GetPlayer() *Player {
	if x != nil {
		return x.Player
	}
	return nil
}

// 新增表3：golang_test3（结构类似，增加嵌套字段）
type GolangTest3 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Ip            string                 `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Port          uint32                 `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	GroupId       uint32                 `protobuf:"varint,4,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Player        *Player                `protobuf:"bytes,5,opt,name=player,proto3" json:"player,omitempty"`
	ExtraPlayer   *Player                `protobuf:"bytes,6,opt,name=extra_player,json=extraPlayer,proto3" json:"extra_player,omitempty"` // 额外的嵌套player字段
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GolangTest3) Reset() {
	*x = GolangTest3{}
	mi := &file_mysql_database_table_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GolangTest3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GolangTest3) ProtoMessage() {}

func (x *GolangTest3) ProtoReflect() protoreflect.Message {
	mi := &file_mysql_database_table_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GolangTest3.ProtoReflect.Descriptor instead.
func (*GolangTest3) Descriptor() ([]byte, []int) {
	return file_mysql_database_table_proto_rawDescGZIP(), []int{4}
}

func (x *GolangTest3) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GolangTest3) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *GolangTest3) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *GolangTest3) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *GolangTest3) GetPlayer() *Player {
	if x != nil {
		return x.Player
	}
	return nil
}

func (x *GolangTest3) GetExtraPlayer() *Player {
	if x != nil {
		return x.ExtraPlayer
	}
	return nil
}

// 列表消息（用于批量查询）
type GolangTestList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TestList      []*GolangTest          `protobuf:"bytes,1,rep,name=test_list,json=testList,proto3" json:"test_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GolangTestList) Reset() {
	*x = GolangTestList{}
	mi := &file_mysql_database_table_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GolangTestList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GolangTestList) ProtoMessage() {}

func (x *GolangTestList) ProtoReflect() protoreflect.Message {
	mi := &file_mysql_database_table_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GolangTestList.ProtoReflect.Descriptor instead.
func (*GolangTestList) Descriptor() ([]byte, []int) {
	return file_mysql_database_table_proto_rawDescGZIP(), []int{5}
}

func (x *GolangTestList) GetTestList() []*GolangTest {
	if x != nil {
		return x.TestList
	}
	return nil
}

type GolangTest1List struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TestList      []*GolangTest1         `protobuf:"bytes,1,rep,name=test_list,json=testList,proto3" json:"test_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GolangTest1List) Reset() {
	*x = GolangTest1List{}
	mi := &file_mysql_database_table_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GolangTest1List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GolangTest1List) ProtoMessage() {}

func (x *GolangTest1List) ProtoReflect() protoreflect.Message {
	mi := &file_mysql_database_table_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GolangTest1List.ProtoReflect.Descriptor instead.
func (*GolangTest1List) Descriptor() ([]byte, []int) {
	return file_mysql_database_table_proto_rawDescGZIP(), []int{6}
}

func (x *GolangTest1List) GetTestList() []*GolangTest1 {
	if x != nil {
		return x.TestList
	}
	return nil
}

type GolangTest2List struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TestList      []*GolangTest2         `protobuf:"bytes,1,rep,name=test_list,json=testList,proto3" json:"test_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GolangTest2List) Reset() {
	*x = GolangTest2List{}
	mi := &file_mysql_database_table_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GolangTest2List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GolangTest2List) ProtoMessage() {}

func (x *GolangTest2List) ProtoReflect() protoreflect.Message {
	mi := &file_mysql_database_table_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GolangTest2List.ProtoReflect.Descriptor instead.
func (*GolangTest2List) Descriptor() ([]byte, []int) {
	return file_mysql_database_table_proto_rawDescGZIP(), []int{7}
}

func (x *GolangTest2List) GetTestList() []*GolangTest2 {
	if x != nil {
		return x.TestList
	}
	return nil
}

type GolangTest3List struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TestList      []*GolangTest3         `protobuf:"bytes,1,rep,name=test_list,json=testList,proto3" json:"test_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GolangTest3List) Reset() {
	*x = GolangTest3List{}
	mi := &file_mysql_database_table_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GolangTest3List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GolangTest3List) ProtoMessage() {}

func (x *GolangTest3List) ProtoReflect() protoreflect.Message {
	mi := &file_mysql_database_table_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GolangTest3List.ProtoReflect.Descriptor instead.
func (*GolangTest3List) Descriptor() ([]byte, []int) {
	return file_mysql_database_table_proto_rawDescGZIP(), []int{8}
}

func (x *GolangTest3List) GetTestList() []*GolangTest3 {
	if x != nil {
		return x.TestList
	}
	return nil
}

var File_mysql_database_table_proto protoreflect.FileDescriptor

const file_mysql_database_table_proto_rawDesc = "" +
	"\n" +
	"\x1amysql_database_table.proto\x1a\rdb_base.proto\"9\n" +
	"\x06player\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\x04R\bplayerId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"\x9d\x01\n" +
	"\vgolang_test\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x0e\n" +
	"\x02ip\x18\x02 \x01(\tR\x02ip\x12\x12\n" +
	"\x04port\x18\x03 \x01(\rR\x04port\x12\x19\n" +
	"\bgroup_id\x18\x04 \x01(\rR\agroupId\x12\x1f\n" +
	"\x06player\x18\x05 \x01(\v2\a.playerR\x06player:\x1e\x8a\x92\xf4\x01\vgolang_test\x92\x92\xf4\x01\x02id\xb2\x92\xf4\x01\x02id\"\xbe\x01\n" +
	"\fgolang_test1\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x0e\n" +
	"\x02ip\x18\x02 \x01(\tR\x02ip\x12\x12\n" +
	"\x04port\x18\x03 \x01(\rR\x04port\x12\x19\n" +
	"\bgroup_id\x18\x04 \x01(\rR\agroupId\x12\x1f\n" +
	"\x06player\x18\x05 \x01(\v2\a.playerR\x06player\x12\x1d\n" +
	"\n" +
	"extra_info\x18\x06 \x01(\tR\textraInfo:\x1f\x8a\x92\xf4\x01\fgolang_test1\x92\x92\xf4\x01\x02id\xb2\x92\xf4\x01\x02id\"\x9f\x01\n" +
	"\fgolang_test2\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x0e\n" +
	"\x02ip\x18\x02 \x01(\tR\x02ip\x12\x12\n" +
	"\x04port\x18\x03 \x01(\x04R\x04port\x12\x19\n" +
	"\bgroup_id\x18\x04 \x01(\rR\agroupId\x12\x1f\n" +
	"\x06player\x18\x05 \x01(\v2\a.playerR\x06player:\x1f\x8a\x92\xf4\x01\fgolang_test2\x92\x92\xf4\x01\x02id\xb2\x92\xf4\x01\x02id\"\xcb\x01\n" +
	"\fgolang_test3\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x0e\n" +
	"\x02ip\x18\x02 \x01(\tR\x02ip\x12\x12\n" +
	"\x04port\x18\x03 \x01(\rR\x04port\x12\x19\n" +
	"\bgroup_id\x18\x04 \x01(\rR\agroupId\x12\x1f\n" +
	"\x06player\x18\x05 \x01(\v2\a.playerR\x06player\x12*\n" +
	"\fextra_player\x18\x06 \x01(\v2\a.playerR\vextraPlayer:\x1f\x8a\x92\xf4\x01\fgolang_test3\x92\x92\xf4\x01\x02id\xb2\x92\xf4\x01\x02id\"=\n" +
	"\x10golang_test_list\x12)\n" +
	"\ttest_list\x18\x01 \x03(\v2\f.golang_testR\btestList\"?\n" +
	"\x11golang_test1_list\x12*\n" +
	"\ttest_list\x18\x01 \x03(\v2\r.golang_test1R\btestList\"?\n" +
	"\x11golang_test2_list\x12*\n" +
	"\ttest_list\x18\x01 \x03(\v2\r.golang_test2R\btestList\"?\n" +
	"\x11golang_test3_list\x12*\n" +
	"\ttest_list\x18\x01 \x03(\v2\r.golang_test3R\btestListB\x12Z\x10./;dbprotooptionb\x06proto3"

var (
	file_mysql_database_table_proto_rawDescOnce sync.Once
	file_mysql_database_table_proto_rawDescData []byte
)

func file_mysql_database_table_proto_rawDescGZIP() []byte {
	file_mysql_database_table_proto_rawDescOnce.Do(func() {
		file_mysql_database_table_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_mysql_database_table_proto_rawDesc), len(file_mysql_database_table_proto_rawDesc)))
	})
	return file_mysql_database_table_proto_rawDescData
}

var file_mysql_database_table_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_mysql_database_table_proto_goTypes = []any{
	(*Player)(nil),          // 0: player
	(*GolangTest)(nil),      // 1: golang_test
	(*GolangTest1)(nil),     // 2: golang_test1
	(*GolangTest2)(nil),     // 3: golang_test2
	(*GolangTest3)(nil),     // 4: golang_test3
	(*GolangTestList)(nil),  // 5: golang_test_list
	(*GolangTest1List)(nil), // 6: golang_test1_list
	(*GolangTest2List)(nil), // 7: golang_test2_list
	(*GolangTest3List)(nil), // 8: golang_test3_list
}
var file_mysql_database_table_proto_depIdxs = []int32{
	0, // 0: golang_test.player:type_name -> player
	0, // 1: golang_test1.player:type_name -> player
	0, // 2: golang_test2.player:type_name -> player
	0, // 3: golang_test3.player:type_name -> player
	0, // 4: golang_test3.extra_player:type_name -> player
	1, // 5: golang_test_list.test_list:type_name -> golang_test
	2, // 6: golang_test1_list.test_list:type_name -> golang_test1
	3, // 7: golang_test2_list.test_list:type_name -> golang_test2
	4, // 8: golang_test3_list.test_list:type_name -> golang_test3
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_mysql_database_table_proto_init() }
func file_mysql_database_table_proto_init() {
	if File_mysql_database_table_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_mysql_database_table_proto_rawDesc), len(file_mysql_database_table_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mysql_database_table_proto_goTypes,
		DependencyIndexes: file_mysql_database_table_proto_depIdxs,
		MessageInfos:      file_mysql_database_table_proto_msgTypes,
	}.Build()
	File_mysql_database_table_proto = out.File
	file_mysql_database_table_proto_goTypes = nil
	file_mysql_database_table_proto_depIdxs = nil
}
